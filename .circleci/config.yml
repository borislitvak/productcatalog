version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.3
  snyk: snyk/snyk@1.4.0

base_image: &base_image
  resource_class: small
  docker:
    - image: cimg/base:2022.04

go_image: &go_image
  resource_class: medium
  docker:
    - image: cimg/go:1.19

go_node_image: &go_node_image
  resource_class: medium
  docker:
    - image: cimg/go:1.19-node

node_image: &node_image
  resource_class: medium
  docker:
    - image: cimg/node:18.0.0

jobs:
  snyk_oss_scan:
    <<: *go_node_image
    environment:
      GOPRIVATE=github.com/snyk-retail-store-demo
    steps:
      - checkout
      - run:
          name: setup private go deps access
          command: git config --global url."https://$GITHUB_TOKEN:x-oauth-basic@github.com/snyk-retail-store-demo".insteadOf "https://github.com/snyk-retail-store-demo"
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: true
          project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}'
          severity-threshold: high
          token-variable: SNYK_TOKEN
          additional-arguments: '--project-tags="component=pkg:github/snyk-retail-store-demo/${CIRCLE_PROJECT_REPONAME}@${CIRCLE_BRANCH}"'
  snyk_oss_scan_dev:
    <<: *go_node_image
    environment:
      GOPRIVATE=github.com/snyk-retail-store-demo
    steps:
      - checkout
      - run:
          name: setup private go deps access
          command: git config --global url."https://$GITHUB_TOKEN:x-oauth-basic@github.com/snyk-retail-store-demo".insteadOf "https://github.com/snyk-retail-store-demo"
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: true
          project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}'
          severity-threshold: high
          token-variable: SNYK_TOKEN
          additional-arguments: '--project-tags="component=pkg:github/snyk-retail-store-demo/${CIRCLE_PROJECT_REPONAME}@${CIRCLE_BRANCH}"'

  build_scan_and_push_image:
    <<: *base_image
    environment:
      DOCKER_BUILDKIT: 1
    steps:
      - checkout 
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - aws-ecr/build-and-push-image:
          assume-web-identity: true
          aws-cli-version: latest
          dockerfile: Dockerfile
          extra-build-args: '--compress --secret id=gh_token,env=GITHUB_TOKEN'
          no-output-timeout: 20m
          platform: linux/amd64
          push-image: true
          repo: productcatalogservice 
          repo-scan-on-push: true
          role-arn: '${ROLE_ARN}'
          role-session-name: productcatalogservice
          skip-when-tags-exist: true
          tag: '${CIRCLE_SHA1}'
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: true
          project: "${AWS_ECR_REGISTRY_NAME}/productcatalogservice"
          docker-image-name: "${AWS_ECR_REGISTRY_NAME}/productcatalogservice:${CIRCLE_SHA1}"
          severity-threshold: high
          token-variable: SNYK_TOKEN
          target-file: Dockerfile
          additional-arguments: '--project-tags="component=pkg:github/snyk-retail-store-demo/${CIRCLE_PROJECT_REPONAME}@${CIRCLE_BRANCH}" --project-tags="component=pkg:github/snyk-retail-store-demo/tracing@main"'
  snyk_image_scan_dev:
    <<: *base_image
    environment:
      DOCKER_BUILDKIT: 1
    steps:
      - checkout 
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - aws-ecr/ecr-login:
          assume-web-identity: true
          aws-cli-version: latest
          role-arn: '${ROLE_ARN}'
          role-session-name: productcatalogservice
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: true
          project: "${AWS_ECR_REGISTRY_NAME}/productcatalogservice"
          docker-image-name: "${AWS_ECR_REGISTRY_NAME}/productcatalogservice:${CIRCLE_SHA1}"
          severity-threshold: high
          token-variable: SNYK_TOKEN
          target-file: Dockerfile
          additional-arguments: '--project-tags="component=pkg:github/snyk-retail-store-demo/${CIRCLE_PROJECT_REPONAME}@${CIRCLE_BRANCH}" --project-tags="component=pkg:github/snyk-retail-store-demo/tracing@main"'

  build_and_publish:
    <<: *base_image
    environment:
      DOCKER_BUILDKIT: 1
    steps:
      - checkout
  update_and_deploy:
    <<: *base_image
    environment:
      DOCKER_BUILDKIT: 1
    steps:
      - add_ssh_keys:
          fingerprints:
            - "4c:a4:e7:04:de:44:f3:79:4e:97:ee:b8:57:c5:5b:4c"
      - run:
          name: Add github.com to known hosts
          command: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: git clone "git@github.com:snyk-retail-store-demo/store.git"
      - run: git config --global user.email "${GITHUB_EMAIL}"
      - run: git config --global user.name "${GITHUB_USERNAME}"
      - run: 
          name: "update image version"
          command: |
            cd store/apps/
            yq -e -i "(. | select(.kind == \"Application\").spec.source.kustomize.images[0]) =  \"${AWS_ECR_REGISTRY_NAME}/productcatalogservice:${CIRCLE_SHA1}\"" productcatalogservice.yaml
      - run: 
          name: "commit and push"
          command: |
            cd store/apps/
            git add .
            git commit --allow-empty -m "feat: deploy productcatalogservice version ${CIRCLE_SHA1}"
            git push

workflows:
  version: 2
  build_and_publish:
    jobs:
      - snyk_oss_scan:
          context:
            - snyk
            - github
          filters:
            branches:
              only:
                - main
      - snyk_oss_scan_dev:
          context:
            - snyk-dev
            - github
          filters:
            branches:
              only:
                - main
      - build_scan_and_push_image:
          context: 
            - snyk 
            - ecr
            - github
          requires:
            - snyk_oss_scan
      - snyk_image_scan_dev:
          context: 
            - snyk-dev
            - ecr
            - github
          requires:
            - build_scan_and_push_image
          filters:
            branches:
              only:
                - main
      - update_and_deploy:
          requires: 
            - build_scan_and_push_image
          context:
            - ecr
            - github
